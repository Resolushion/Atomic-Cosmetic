{
  "version": 3,
  "sources": ["../../object-keys/isArguments.js", "../../object-keys/implementation.js", "../../object-keys/index.js", "../../define-properties/index.js", "../../es-object-atoms/RequireObjectCoercible.js", "../../object.entries/implementation.js", "../../object.entries/polyfill.js", "../../object.entries/shim.js", "../../object.entries/index.js", "../../warning/warning.js", "../../node-polyglot/index.js", "../../ra-i18n-polyglot/src/index.ts"],
  "sourcesContent": ["'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n", "'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n", "'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n", "'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar defineDataProperty = require('define-data-property');\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar supportsDescriptors = require('has-property-descriptors')();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (supportsDescriptors) {\n\t\tdefineDataProperty(object, name, value, true);\n\t} else {\n\t\tdefineDataProperty(object, name, value);\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\n/** @type {import('./RequireObjectCoercible')} */\nmodule.exports = function RequireObjectCoercible(value) {\n\tif (value == null) {\n\t\tthrow new $TypeError((arguments.length > 0 && arguments[1]) || ('Cannot call method on ' + value));\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\nvar callBound = require('call-bind/callBound');\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar $push = callBound('Array.prototype.push');\n\nmodule.exports = function entries(O) {\n\tvar obj = RequireObjectCoercible(O);\n\tvar entrys = [];\n\tfor (var key in obj) {\n\t\tif ($isEnumerable(obj, key)) { // checks own-ness as well\n\t\t\t$push(entrys, [key, obj[key]]);\n\t\t}\n\t}\n\treturn entrys;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.entries === 'function' ? Object.entries : implementation;\n};\n", "'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimEntries() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { entries: polyfill }, {\n\t\tentries: function testEntries() {\n\t\t\treturn Object.entries !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n", "//     (c) 2012-2018 Airbnb, Inc.\n//\n//     polyglot.js may be freely distributed under the terms of the BSD\n//     license. For all licensing information, details, and documentation:\n//     http://airbnb.github.com/polyglot.js\n//\n//\n// Polyglot.js is an I18n helper library written in JavaScript, made to\n// work both in the browser and in Node. It provides a simple solution for\n// interpolation and pluralization, based off of Airbnb's\n// experience adding I18n functionality to its Backbone.js and Node apps.\n//\n// Polylglot is agnostic to your translation backend. It doesn't perform any\n// translation; it simply gives you a way to manage translated phrases from\n// your client- or server-side JavaScript application.\n//\n\n'use strict';\n\nvar entries = require('object.entries');\nvar warning = require('warning');\nvar has = require('hasown');\n\nvar warn = function warn(message) {\n  warning(false, message);\n};\n\nvar defaultReplace = String.prototype.replace;\nvar split = String.prototype.split;\n\n// #### Pluralization methods\n// The string that separates the different phrase possibilities.\nvar delimiter = '||||';\n\nvar russianPluralGroups = function (n) {\n  var lastTwo = n % 100;\n  var end = lastTwo % 10;\n  if (lastTwo !== 11 && end === 1) {\n    return 0;\n  }\n  if (2 <= end && end <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {\n    return 1;\n  }\n  return 2;\n};\n\nvar defaultPluralRules = {\n  // Mapping from pluralization group plural logic.\n  pluralTypes: {\n    arabic: function (n) {\n      // http://www.arabeyes.org/Plural_Forms\n      if (n < 3) { return n; }\n      var lastTwo = n % 100;\n      if (lastTwo >= 3 && lastTwo <= 10) return 3;\n      return lastTwo >= 11 ? 4 : 5;\n    },\n    bosnian_serbian: russianPluralGroups,\n    chinese: function () { return 0; },\n    croatian: russianPluralGroups,\n    french: function (n) { return n >= 2 ? 1 : 0; },\n    german: function (n) { return n !== 1 ? 1 : 0; },\n    russian: russianPluralGroups,\n    lithuanian: function (n) {\n      if (n % 10 === 1 && n % 100 !== 11) { return 0; }\n      return n % 10 >= 2 && n % 10 <= 9 && (n % 100 < 11 || n % 100 > 19) ? 1 : 2;\n    },\n    czech: function (n) {\n      if (n === 1) { return 0; }\n      return (n >= 2 && n <= 4) ? 1 : 2;\n    },\n    polish: function (n) {\n      if (n === 1) { return 0; }\n      var end = n % 10;\n      return 2 <= end && end <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;\n    },\n    icelandic: function (n) { return (n % 10 !== 1 || n % 100 === 11) ? 1 : 0; },\n    slovenian: function (n) {\n      var lastTwo = n % 100;\n      if (lastTwo === 1) {\n        return 0;\n      }\n      if (lastTwo === 2) {\n        return 1;\n      }\n      if (lastTwo === 3 || lastTwo === 4) {\n        return 2;\n      }\n      return 3;\n    },\n    romanian: function (n) {\n      if (n === 1) { return 0; }\n      var lastTwo = n % 100;\n      if (n === 0 || (lastTwo >= 2 && lastTwo <= 19)) { return 1; }\n      return 2;\n    },\n    ukrainian: russianPluralGroups\n  },\n\n  // Mapping from pluralization group to individual language codes/locales.\n  // Will look up based on exact match, if not found and it's a locale will parse the locale\n  // for language code, and if that does not exist will default to 'en'\n  pluralTypeToLanguages: {\n    arabic: ['ar'],\n    bosnian_serbian: ['bs-Latn-BA', 'bs-Cyrl-BA', 'srl-RS', 'sr-RS'],\n    chinese: ['id', 'id-ID', 'ja', 'ko', 'ko-KR', 'lo', 'ms', 'th', 'th-TH', 'zh'],\n    croatian: ['hr', 'hr-HR'],\n    german: ['fa', 'da', 'de', 'en', 'es', 'fi', 'el', 'he', 'hi-IN', 'hu', 'hu-HU', 'it', 'nl', 'no', 'pt', 'sv', 'tr'],\n    french: ['fr', 'tl', 'pt-br'],\n    russian: ['ru', 'ru-RU'],\n    lithuanian: ['lt'],\n    czech: ['cs', 'cs-CZ', 'sk'],\n    polish: ['pl'],\n    icelandic: ['is', 'mk'],\n    slovenian: ['sl-SL'],\n    romanian: ['ro'],\n    ukrainian: ['uk', 'ua']\n  }\n};\n\nfunction langToTypeMap(mapping) {\n  var ret = {};\n  var mappingEntries = entries(mapping);\n  for (var i = 0; i < mappingEntries.length; i += 1) {\n    var type = mappingEntries[i][0];\n    var langs = mappingEntries[i][1];\n    for (var j = 0; j < langs.length; j += 1) {\n      ret[langs[j]] = type;\n    }\n  }\n  return ret;\n}\n\nfunction pluralTypeName(pluralRules, locale) {\n  var langToPluralType = langToTypeMap(pluralRules.pluralTypeToLanguages);\n  return langToPluralType[locale]\n    || langToPluralType[split.call(locale, /-/, 1)[0]]\n    || langToPluralType.en;\n}\n\nfunction pluralTypeIndex(pluralRules, pluralType, count) {\n  return pluralRules.pluralTypes[pluralType](count);\n}\n\nfunction createMemoizedPluralTypeNameSelector() {\n  var localePluralTypeStorage = {};\n\n  return function (pluralRules, locale) {\n    var pluralType = localePluralTypeStorage[locale];\n\n    if (pluralType && !pluralRules.pluralTypes[pluralType]) {\n      pluralType = null;\n      localePluralTypeStorage[locale] = pluralType;\n    }\n\n    if (!pluralType) {\n      pluralType = pluralTypeName(pluralRules, locale);\n\n      if (pluralType) {\n        localePluralTypeStorage[locale] = pluralType;\n      }\n    }\n\n    return pluralType;\n  };\n}\n\nfunction escape(token) {\n  return token.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction constructTokenRegex(opts) {\n  var prefix = (opts && opts.prefix) || '%{';\n  var suffix = (opts && opts.suffix) || '}';\n\n  if (prefix === delimiter || suffix === delimiter) {\n    throw new RangeError('\"' + delimiter + '\" token is reserved for pluralization');\n  }\n\n  return new RegExp(escape(prefix) + '(.*?)' + escape(suffix), 'g');\n}\n\nvar memoizedPluralTypeName = createMemoizedPluralTypeNameSelector();\n\nvar defaultTokenRegex = /%\\{(.*?)\\}/g;\n\n// ### transformPhrase(phrase, substitutions, locale)\n//\n// Takes a phrase string and transforms it by choosing the correct\n// plural form and interpolating it.\n//\n//     transformPhrase('Hello, %{name}!', {name: 'Spike'});\n//     // \"Hello, Spike!\"\n//\n// The correct plural form is selected if substitutions.smart_count\n// is set. You can pass in a number instead of an Object as `substitutions`\n// as a shortcut for `smart_count`.\n//\n//     transformPhrase('%{smart_count} new messages |||| 1 new message', {smart_count: 1}, 'en');\n//     // \"1 new message\"\n//\n//     transformPhrase('%{smart_count} new messages |||| 1 new message', {smart_count: 2}, 'en');\n//     // \"2 new messages\"\n//\n//     transformPhrase('%{smart_count} new messages |||| 1 new message', 5, 'en');\n//     // \"5 new messages\"\n//\n// You should pass in a third argument, the locale, to specify the correct plural type.\n// It defaults to `'en'` with 2 plural forms.\nfunction transformPhrase(\n  phrase,\n  substitutions,\n  locale,\n  tokenRegex,\n  pluralRules,\n  replaceImplementation\n) {\n  if (typeof phrase !== 'string') {\n    throw new TypeError('Polyglot.transformPhrase expects argument #1 to be string');\n  }\n\n  if (substitutions == null) {\n    return phrase;\n  }\n\n  var result = phrase;\n  var interpolationRegex = tokenRegex || defaultTokenRegex;\n  var replace = replaceImplementation || defaultReplace;\n\n  // allow number as a pluralization shortcut\n  var options = typeof substitutions === 'number' ? { smart_count: substitutions } : substitutions;\n\n  // Select plural form: based on a phrase text that contains `n`\n  // plural forms separated by `delimiter`, a `locale`, and a `substitutions.smart_count`,\n  // choose the correct plural form. This is only done if `count` is set.\n  if (options.smart_count != null && phrase) {\n    var pluralRulesOrDefault = pluralRules || defaultPluralRules;\n    var texts = split.call(phrase, delimiter);\n    var bestLocale = locale || 'en';\n    var pluralType = memoizedPluralTypeName(pluralRulesOrDefault, bestLocale);\n    var pluralTypeWithCount = pluralTypeIndex(\n      pluralRulesOrDefault,\n      pluralType,\n      options.smart_count\n    );\n\n    result = defaultReplace.call(texts[pluralTypeWithCount] || texts[0], /^[^\\S]*|[^\\S]*$/g, '');\n  }\n\n  // Interpolate: Creates a `RegExp` object for each interpolation placeholder.\n  result = replace.call(result, interpolationRegex, function (expression, argument) {\n    if (!has(options, argument) || options[argument] == null) { return expression; }\n    return options[argument];\n  });\n\n  return result;\n}\n\n// ### Polyglot class constructor\nfunction Polyglot(options) {\n  var opts = options || {};\n  this.phrases = {};\n  this.extend(opts.phrases || {});\n  this.currentLocale = opts.locale || 'en';\n  var allowMissing = opts.allowMissing ? transformPhrase : null;\n  this.onMissingKey = typeof opts.onMissingKey === 'function' ? opts.onMissingKey : allowMissing;\n  this.warn = opts.warn || warn;\n  this.replaceImplementation = opts.replace || defaultReplace;\n  this.tokenRegex = constructTokenRegex(opts.interpolation);\n  this.pluralRules = opts.pluralRules || defaultPluralRules;\n}\n\n// ### polyglot.locale([locale])\n//\n// Get or set locale. Internally, Polyglot only uses locale for pluralization.\nPolyglot.prototype.locale = function (newLocale) {\n  if (newLocale) this.currentLocale = newLocale;\n  return this.currentLocale;\n};\n\n// ### polyglot.extend(phrases)\n//\n// Use `extend` to tell Polyglot how to translate a given key.\n//\n//     polyglot.extend({\n//       \"hello\": \"Hello\",\n//       \"hello_name\": \"Hello, %{name}\"\n//     });\n//\n// The key can be any string.  Feel free to call `extend` multiple times;\n// it will override any phrases with the same key, but leave existing phrases\n// untouched.\n//\n// It is also possible to pass nested phrase objects, which get flattened\n// into an object with the nested keys concatenated using dot notation.\n//\n//     polyglot.extend({\n//       \"nav\": {\n//         \"hello\": \"Hello\",\n//         \"hello_name\": \"Hello, %{name}\",\n//         \"sidebar\": {\n//           \"welcome\": \"Welcome\"\n//         }\n//       }\n//     });\n//\n//     console.log(polyglot.phrases);\n//     // {\n//     //   'nav.hello': 'Hello',\n//     //   'nav.hello_name': 'Hello, %{name}',\n//     //   'nav.sidebar.welcome': 'Welcome'\n//     // }\n//\n// `extend` accepts an optional second argument, `prefix`, which can be used\n// to prefix every key in the phrases object with some string, using dot\n// notation.\n//\n//     polyglot.extend({\n//       \"hello\": \"Hello\",\n//       \"hello_name\": \"Hello, %{name}\"\n//     }, \"nav\");\n//\n//     console.log(polyglot.phrases);\n//     // {\n//     //   'nav.hello': 'Hello',\n//     //   'nav.hello_name': 'Hello, %{name}'\n//     // }\n//\n// This feature is used internally to support nested phrase objects.\nPolyglot.prototype.extend = function (morePhrases, prefix) {\n  var phraseEntries = entries(morePhrases || {});\n  for (var i = 0; i < phraseEntries.length; i += 1) {\n    var key = phraseEntries[i][0];\n    var phrase = phraseEntries[i][1];\n    var prefixedKey = prefix ? prefix + '.' + key : key;\n    if (typeof phrase === 'object') {\n      this.extend(phrase, prefixedKey);\n    } else {\n      this.phrases[prefixedKey] = phrase;\n    }\n  }\n};\n\n// ### polyglot.unset(phrases)\n// Use `unset` to selectively remove keys from a polyglot instance.\n//\n//     polyglot.unset(\"some_key\");\n//     polyglot.unset({\n//       \"hello\": \"Hello\",\n//       \"hello_name\": \"Hello, %{name}\"\n//     });\n//\n// The unset method can take either a string (for the key), or an object hash with\n// the keys that you would like to unset.\nPolyglot.prototype.unset = function (morePhrases, prefix) {\n  if (typeof morePhrases === 'string') {\n    delete this.phrases[morePhrases];\n  } else {\n    var phraseEntries = entries(morePhrases || {});\n    for (var i = 0; i < phraseEntries.length; i += 1) {\n      var key = phraseEntries[i][0];\n      var phrase = phraseEntries[i][1];\n      var prefixedKey = prefix ? prefix + '.' + key : key;\n      if (typeof phrase === 'object') {\n        this.unset(phrase, prefixedKey);\n      } else {\n        delete this.phrases[prefixedKey];\n      }\n    }\n  }\n};\n\n// ### polyglot.clear()\n//\n// Clears all phrases. Useful for special cases, such as freeing\n// up memory if you have lots of phrases but no longer need to\n// perform any translation. Also used internally by `replace`.\nPolyglot.prototype.clear = function () {\n  this.phrases = {};\n};\n\n// ### polyglot.replace(phrases)\n//\n// Completely replace the existing phrases with a new set of phrases.\n// Normally, just use `extend` to add more phrases, but under certain\n// circumstances, you may want to make sure no old phrases are lying around.\nPolyglot.prototype.replace = function (newPhrases) {\n  this.clear();\n  this.extend(newPhrases);\n};\n\n// ### polyglot.t(key, options)\n//\n// The most-used method. Provide a key, and `t` will return the\n// phrase.\n//\n//     polyglot.t(\"hello\");\n//     => \"Hello\"\n//\n// The phrase value is provided first by a call to `polyglot.extend()` or\n// `polyglot.replace()`.\n//\n// Pass in an object as the second argument to perform interpolation.\n//\n//     polyglot.t(\"hello_name\", {name: \"Spike\"});\n//     => \"Hello, Spike\"\n//\n// If you like, you can provide a default value in case the phrase is missing.\n// Use the special option key \"_\" to specify a default.\n//\n//     polyglot.t(\"i_like_to_write_in_language\", {\n//       _: \"I like to write in %{language}.\",\n//       language: \"JavaScript\"\n//     });\n//     => \"I like to write in JavaScript.\"\n//\nPolyglot.prototype.t = function (key, options) {\n  var phrase, result;\n  var opts = options == null ? {} : options;\n  if (typeof this.phrases[key] === 'string') {\n    phrase = this.phrases[key];\n  } else if (typeof opts._ === 'string') {\n    phrase = opts._;\n  } else if (this.onMissingKey) {\n    var onMissingKey = this.onMissingKey;\n    result = onMissingKey(\n      key,\n      opts,\n      this.currentLocale,\n      this.tokenRegex,\n      this.pluralRules,\n      this.replaceImplementation\n    );\n  } else {\n    this.warn('Missing translation for key: \"' + key + '\"');\n    result = key;\n  }\n  if (typeof phrase === 'string') {\n    result = transformPhrase(\n      phrase,\n      opts,\n      this.currentLocale,\n      this.tokenRegex,\n      this.pluralRules,\n      this.replaceImplementation\n    );\n  }\n  return result;\n};\n\n// ### polyglot.has(key)\n//\n// Check if polyglot has a translation for given key\nPolyglot.prototype.has = function (key) {\n  return has(this.phrases, key);\n};\n\n// export transformPhrase\nPolyglot.transformPhrase = function transform(phrase, substitutions, locale) {\n  return transformPhrase(phrase, substitutions, locale);\n};\n\nmodule.exports = Polyglot;\n", "import Polyglot from 'node-polyglot';\n\nimport { I18nProvider, TranslationMessages, Locale } from 'ra-core';\n\ntype GetMessages = (\n    locale: string\n) => TranslationMessages | Promise<TranslationMessages>;\n\n/**\n * Build a polyglot-based i18nProvider based on a function returning the messages for a locale\n *\n * @example\n *\n * import { Admin, Resource, polyglotI18nProvider } from 'react-admin';\n * import englishMessages from 'ra-language-english';\n * import frenchMessages from 'ra-language-french';\n *\n * const messages = {\n *     fr: frenchMessages,\n *     en: englishMessages,\n * };\n * const i18nProvider = polyglotI18nProvider(\n *     locale => messages[locale],\n *     'en',\n *     [{ locale: 'en', name: 'English' }, { locale: 'fr', name: 'Français' }]\n * )\n */\nexport default (\n    getMessages: GetMessages,\n    initialLocale: string = 'en',\n    availableLocales: Locale[] | any = [{ locale: 'en', name: 'English' }],\n    polyglotOptions: any = {}\n): I18nProvider => {\n    let locale = initialLocale;\n    const messages = getMessages(initialLocale);\n    if (messages instanceof Promise) {\n        throw new Error(\n            `The i18nProvider returned a Promise for the messages of the default locale (${initialLocale}). Please update your i18nProvider to return the messages of the default locale in a synchronous way.`\n        );\n    }\n\n    let availableLocalesFinal, polyglotOptionsFinal;\n    if (Array.isArray(availableLocales)) {\n        // third argument is an array of locales\n        availableLocalesFinal = availableLocales;\n        polyglotOptionsFinal = polyglotOptions;\n    } else {\n        // third argument is the polyglotOptions\n        availableLocalesFinal = [{ locale: 'en', name: 'English' }];\n        polyglotOptionsFinal = availableLocales;\n    }\n    const polyglot = new Polyglot({\n        locale,\n        phrases: { '': '', ...messages },\n        ...polyglotOptionsFinal,\n    });\n    let translate = polyglot.t.bind(polyglot);\n\n    return {\n        translate: (key: string, options: any = {}) => translate(key, options),\n        changeLocale: (newLocale: string) =>\n            // We systematically return a Promise for the messages because\n            // getMessages may return a Promise\n            Promise.resolve(getMessages(newLocale as string)).then(\n                (messages: TranslationMessages) => {\n                    locale = newLocale;\n                    const newPolyglot = new Polyglot({\n                        locale: newLocale,\n                        phrases: { '': '', ...messages },\n                        ...polyglotOptions,\n                    });\n                    translate = newPolyglot.t.bind(newPolyglot);\n                }\n            ),\n        getLocale: () => locale,\n        getLocales: () => availableLocalesFinal,\n    };\n};\n"],
  "mappings": "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",
  "names": ["require_implementation", "printWarning", "warn", "Polyglot", "Polyglot", "messages"]
}
