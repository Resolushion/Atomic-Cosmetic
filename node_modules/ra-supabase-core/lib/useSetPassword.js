"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useSetPassword = void 0;
var ra_core_1 = require("ra-core");
var react_query_1 = require("@tanstack/react-query");
/**
 * This hook returns a function to call in order to set a user password on Supabase.
 *
 * @example
 * import { useSupabaseAccessToken } from 'ra-supabase-core';
 *
 * const SetPasswordPage = () => {
 *     const access_token = useSupabaseAccessToken();
 *     const setPassword = useSetPassword();
 *
 *     const handleSubmit = event => {
 *         setPassword({
 *             access_token,
 *             password: event.currentTarget.elements.password.value,
 *         });
 *     };
 *
 *     return (
 *         <form onSubmit={handleSubmit}>
 *             <label for="password">Choose a password:</label>
 *             <input id="password" name="password" type="password" />
 *             <button type="submit">Save</button>
 *         </form>
 *     );
 * };
 **/
var useSetPassword = function (options) {
    var notify = (0, ra_core_1.useNotify)();
    var redirect = (0, ra_core_1.useRedirect)();
    var authProvider = (0, ra_core_1.useAuthProvider)();
    if (authProvider == null) {
        throw new Error('No authProvider found. Did you forget to set up an AuthProvider on the <Admin> component?');
    }
    if (authProvider.setPassword == null) {
        throw new Error('The setPassword() method is missing from the AuthProvider although it is required. You may consider adding it');
    }
    var _a = options || {}, _b = _a.onSuccess, onSuccess = _b === void 0 ? function () { return redirect('/'); } : _b, _c = _a.onError, onError = _c === void 0 ? function (error) { return notify(error.message, { type: 'error' }); } : _c;
    var mutation = (0, react_query_1.useMutation)({
        mutationFn: function (params) {
            return authProvider.setPassword(params);
        },
        onSuccess: onSuccess,
        onError: onError,
        retry: false,
    });
    return [mutation.mutate, mutation];
};
exports.useSetPassword = useSetPassword;
