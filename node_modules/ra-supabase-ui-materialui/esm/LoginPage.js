import * as React from 'react';
import { AuthLayout } from './AuthLayout';
import { LoginForm } from './LoginForm';
import { Divider, Stack } from '@mui/material';
import { AppleButton, AzureButton, BitbucketButton, DiscordButton, FacebookButton, GithubButton, GitlabButton, GoogleButton, KeycloakButton, LinkedInButton, NotionButton, SlackButton, SpotifyButton, TwitchButton, TwitterButton, WorkosButton, } from './SocialAuthButton';
/**
 * A component that renders a login page to login to the application through Supabase. It renders a LoginForm by default. It support social login providers.
 * @param props
 * @param props.children The content of the login page. If not set, it will render a LoginForm.
 * @param props.disableEmailPassword If true, the email/password login form will not be rendered.
 * @param props.providers The list of social login providers to render. Defaults to no providers.
 * @example
 * import { LoginPage } from 'ra-supabase-ui-materialui';
 * import { Admin } from 'react-admin';
 *
 * const App = () => (
 *    <Admin dataProvider={dataProvider} loginPage={LoginPage}>
 *       ...
 *   </Admin>
 * );
 *
 * @example With social login providers
 * import { LoginPage } from 'ra-supabase-ui-materialui';
 * import { Admin } from 'react-admin';
 *
 * const App = () => (
 *    <Admin dataProvider={dataProvider} loginPage={<LoginPage providers={['github', 'twitter']} />}>
 *       ...
 *   </Admin>
 * );
 *
 * @example With social login providers
 * import { LoginPage } from 'ra-supabase-ui-materialui';
 * import { Admin } from 'react-admin';
 *
 * const App = () => (
 *    <Admin dataProvider={dataProvider} loginPage={<LoginPage providers={['github', 'twitter']} />}>
 *       ...
 *   </Admin>
 * );
 *
 * @example With social login providers and no email/password login form
 * import { LoginPage } from 'ra-supabase-ui-materialui';
 * import { Admin } from 'react-admin';
 *
 * const App = () => (
 *    <Admin dataProvider={dataProvider} loginPage={<LoginPage disableEmailPassword providers={['github', 'twitter']} />}>
 *       ...
 *   </Admin>
 * );
 */
export var LoginPage = function (props) {
    var children = props.children, _a = props.disableEmailPassword, disableEmailPassword = _a === void 0 ? false : _a, _b = props.disableForgotPassword, disableForgotPassword = _b === void 0 ? false : _b, _c = props.providers, providers = _c === void 0 ? [] : _c;
    return (React.createElement(AuthLayout, null, children !== null && children !== void 0 ? children : (React.createElement(React.Fragment, null,
        disableEmailPassword ? null : (React.createElement(LoginForm, { disableForgotPassword: disableForgotPassword })),
        disableEmailPassword || providers.length === 0 ? null : (React.createElement(Divider, null)),
        providers && providers.length > 0 ? (React.createElement(React.Fragment, null,
            React.createElement(Stack, { gap: 1, padding: 1 },
                providers.includes('apple') ? (React.createElement(AppleButton, null)) : null,
                providers.includes('azure') ? (React.createElement(AzureButton, null)) : null,
                providers.includes('bitbucket') ? (React.createElement(BitbucketButton, null)) : null,
                providers.includes('discord') ? (React.createElement(DiscordButton, null)) : null,
                providers.includes('facebook') ? (React.createElement(FacebookButton, null)) : null,
                providers.includes('gitlab') ? (React.createElement(GitlabButton, null)) : null,
                providers.includes('github') ? (React.createElement(GithubButton, null)) : null,
                providers.includes('google') ? (React.createElement(GoogleButton, null)) : null,
                providers.includes('keycloak') ? (React.createElement(KeycloakButton, null)) : null,
                providers.includes('linkedin') ? (React.createElement(LinkedInButton, null)) : null,
                providers.includes('notion') ? (React.createElement(NotionButton, null)) : null,
                providers.includes('slack') ? (React.createElement(SlackButton, null)) : null,
                providers.includes('spotify') ? (React.createElement(SpotifyButton, null)) : null,
                providers.includes('twitch') ? (React.createElement(TwitchButton, null)) : null,
                providers.includes('twitter') ? (React.createElement(TwitterButton, null)) : null,
                providers.includes('workos') ? (React.createElement(WorkosButton, null)) : null))) : null))));
};
