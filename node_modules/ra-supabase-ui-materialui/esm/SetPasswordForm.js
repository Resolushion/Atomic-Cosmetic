import { CardActions, styled, Typography } from '@mui/material';
import { Form, required, useNotify, useTranslate } from 'ra-core';
import { useSetPassword, useSupabaseAccessToken } from 'ra-supabase-core';
import { PasswordInput, SaveButton } from 'ra-ui-materialui';
import * as React from 'react';
/**
 * A component that renders a form for setting the current user password through Supabase.
 * Can be used for the first login after a user has been invited or to reset the password.
 */
export var SetPasswordForm = function () {
    var access_token = useSupabaseAccessToken();
    var refresh_token = useSupabaseAccessToken({
        parameterName: 'refresh_token',
    });
    var notify = useNotify();
    var translate = useTranslate();
    var setPassword = useSetPassword({
        onError: function (error) {
            notify(typeof error === 'string'
                ? error
                : typeof error === 'undefined' || !error.message
                    ? 'ra.auth.sign_in_error'
                    : error.message, {
                type: 'warning',
                messageArgs: {
                    _: typeof error === 'string'
                        ? error
                        : error && error.message
                            ? error.message
                            : undefined,
                },
            });
        },
    })[0];
    var validate = function (values) {
        if (values.password !== values.confirmPassword) {
            return {
                password: 'ra-supabase.validation.password_mismatch',
                confirmPassword: 'ra-supabase.validation.password_mismatch',
            };
        }
        return {};
    };
    if (!access_token || !refresh_token) {
        if (process.env.NODE_ENV === 'development') {
            console.error('Missing access_token or refresh_token for set password');
        }
        return (React.createElement("div", { className: SupabaseLoginFormClasses.container },
            React.createElement("div", null, translate('ra-supabase.auth.missing_tokens'))));
    }
    var submit = function (values) {
        return setPassword({
            access_token: access_token,
            refresh_token: refresh_token,
            password: values.password,
        });
    };
    return (React.createElement(Root, { onSubmit: submit, validate: validate },
        React.createElement("div", { className: SupabaseLoginFormClasses.container },
            React.createElement(Typography, { variant: "h5", textAlign: "center", gutterBottom: true }, translate('ra-supabase.set_password.new_password', {
                _: 'Choose your password',
            })),
            React.createElement("div", { className: SupabaseLoginFormClasses.input },
                React.createElement(PasswordInput, { source: "password", label: translate('ra.auth.password', {
                        _: 'Password',
                    }), autoComplete: "new-password", fullWidth: true, validate: required() })),
            React.createElement("div", null,
                React.createElement(PasswordInput, { source: "confirmPassword", label: translate('ra.auth.confirm_password', {
                        _: 'Confirm password',
                    }), fullWidth: true, validate: required() }))),
        React.createElement(CardActions, null,
            React.createElement(SaveButton, { variant: "contained", type: "submit", className: SupabaseLoginFormClasses.button, label: translate('ra.action.save') }))));
};
var PREFIX = 'RaSupabaseSetPasswordForm';
var SupabaseLoginFormClasses = {
    container: "".concat(PREFIX, "-container"),
    input: "".concat(PREFIX, "-input"),
    button: "".concat(PREFIX, "-button"),
};
var Root = styled(Form, {
    name: PREFIX,
    overridesResolver: function (props, styles) { return styles.root; },
})(function (_a) {
    var _b;
    var theme = _a.theme;
    return (_b = {},
        _b["& .".concat(SupabaseLoginFormClasses.container)] = {
            padding: '0 1em 0 1em',
        },
        _b["& .".concat(SupabaseLoginFormClasses.input)] = {
            marginTop: '1em',
        },
        _b["& .".concat(SupabaseLoginFormClasses.button)] = {
            width: '100%',
        },
        _b);
});
