"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetPasswordForm = void 0;
var material_1 = require("@mui/material");
var ra_core_1 = require("ra-core");
var ra_supabase_core_1 = require("ra-supabase-core");
var ra_ui_materialui_1 = require("ra-ui-materialui");
var React = __importStar(require("react"));
/**
 * A component that renders a form for setting the current user password through Supabase.
 * Can be used for the first login after a user has been invited or to reset the password.
 */
var SetPasswordForm = function () {
    var access_token = (0, ra_supabase_core_1.useSupabaseAccessToken)();
    var refresh_token = (0, ra_supabase_core_1.useSupabaseAccessToken)({
        parameterName: 'refresh_token',
    });
    var notify = (0, ra_core_1.useNotify)();
    var translate = (0, ra_core_1.useTranslate)();
    var setPassword = (0, ra_supabase_core_1.useSetPassword)({
        onError: function (error) {
            notify(typeof error === 'string'
                ? error
                : typeof error === 'undefined' || !error.message
                    ? 'ra.auth.sign_in_error'
                    : error.message, {
                type: 'warning',
                messageArgs: {
                    _: typeof error === 'string'
                        ? error
                        : error && error.message
                            ? error.message
                            : undefined,
                },
            });
        },
    })[0];
    var validate = function (values) {
        if (values.password !== values.confirmPassword) {
            return {
                password: 'ra-supabase.validation.password_mismatch',
                confirmPassword: 'ra-supabase.validation.password_mismatch',
            };
        }
        return {};
    };
    if (!access_token || !refresh_token) {
        if (process.env.NODE_ENV === 'development') {
            console.error('Missing access_token or refresh_token for set password');
        }
        return (React.createElement("div", { className: SupabaseLoginFormClasses.container },
            React.createElement("div", null, translate('ra-supabase.auth.missing_tokens'))));
    }
    var submit = function (values) {
        return setPassword({
            access_token: access_token,
            refresh_token: refresh_token,
            password: values.password,
        });
    };
    return (React.createElement(Root, { onSubmit: submit, validate: validate },
        React.createElement("div", { className: SupabaseLoginFormClasses.container },
            React.createElement(material_1.Typography, { variant: "h5", textAlign: "center", gutterBottom: true }, translate('ra-supabase.set_password.new_password', {
                _: 'Choose your password',
            })),
            React.createElement("div", { className: SupabaseLoginFormClasses.input },
                React.createElement(ra_ui_materialui_1.PasswordInput, { source: "password", label: translate('ra.auth.password', {
                        _: 'Password',
                    }), autoComplete: "new-password", fullWidth: true, validate: (0, ra_core_1.required)() })),
            React.createElement("div", null,
                React.createElement(ra_ui_materialui_1.PasswordInput, { source: "confirmPassword", label: translate('ra.auth.confirm_password', {
                        _: 'Confirm password',
                    }), fullWidth: true, validate: (0, ra_core_1.required)() }))),
        React.createElement(material_1.CardActions, null,
            React.createElement(ra_ui_materialui_1.SaveButton, { variant: "contained", type: "submit", className: SupabaseLoginFormClasses.button, label: translate('ra.action.save') }))));
};
exports.SetPasswordForm = SetPasswordForm;
var PREFIX = 'RaSupabaseSetPasswordForm';
var SupabaseLoginFormClasses = {
    container: "".concat(PREFIX, "-container"),
    input: "".concat(PREFIX, "-input"),
    button: "".concat(PREFIX, "-button"),
};
var Root = (0, material_1.styled)(ra_core_1.Form, {
    name: PREFIX,
    overridesResolver: function (props, styles) { return styles.root; },
})(function (_a) {
    var _b;
    var theme = _a.theme;
    return (_b = {},
        _b["& .".concat(SupabaseLoginFormClasses.container)] = {
            padding: '0 1em 0 1em',
        },
        _b["& .".concat(SupabaseLoginFormClasses.input)] = {
            marginTop: '1em',
        },
        _b["& .".concat(SupabaseLoginFormClasses.button)] = {
            width: '100%',
        },
        _b);
});
