"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoginPage = void 0;
var React = __importStar(require("react"));
var AuthLayout_1 = require("./AuthLayout");
var LoginForm_1 = require("./LoginForm");
var material_1 = require("@mui/material");
var SocialAuthButton_1 = require("./SocialAuthButton");
/**
 * A component that renders a login page to login to the application through Supabase. It renders a LoginForm by default. It support social login providers.
 * @param props
 * @param props.children The content of the login page. If not set, it will render a LoginForm.
 * @param props.disableEmailPassword If true, the email/password login form will not be rendered.
 * @param props.providers The list of social login providers to render. Defaults to no providers.
 * @example
 * import { LoginPage } from 'ra-supabase-ui-materialui';
 * import { Admin } from 'react-admin';
 *
 * const App = () => (
 *    <Admin dataProvider={dataProvider} loginPage={LoginPage}>
 *       ...
 *   </Admin>
 * );
 *
 * @example With social login providers
 * import { LoginPage } from 'ra-supabase-ui-materialui';
 * import { Admin } from 'react-admin';
 *
 * const App = () => (
 *    <Admin dataProvider={dataProvider} loginPage={<LoginPage providers={['github', 'twitter']} />}>
 *       ...
 *   </Admin>
 * );
 *
 * @example With social login providers
 * import { LoginPage } from 'ra-supabase-ui-materialui';
 * import { Admin } from 'react-admin';
 *
 * const App = () => (
 *    <Admin dataProvider={dataProvider} loginPage={<LoginPage providers={['github', 'twitter']} />}>
 *       ...
 *   </Admin>
 * );
 *
 * @example With social login providers and no email/password login form
 * import { LoginPage } from 'ra-supabase-ui-materialui';
 * import { Admin } from 'react-admin';
 *
 * const App = () => (
 *    <Admin dataProvider={dataProvider} loginPage={<LoginPage disableEmailPassword providers={['github', 'twitter']} />}>
 *       ...
 *   </Admin>
 * );
 */
var LoginPage = function (props) {
    var children = props.children, _a = props.disableEmailPassword, disableEmailPassword = _a === void 0 ? false : _a, _b = props.disableForgotPassword, disableForgotPassword = _b === void 0 ? false : _b, _c = props.providers, providers = _c === void 0 ? [] : _c;
    return (React.createElement(AuthLayout_1.AuthLayout, null, children !== null && children !== void 0 ? children : (React.createElement(React.Fragment, null,
        disableEmailPassword ? null : (React.createElement(LoginForm_1.LoginForm, { disableForgotPassword: disableForgotPassword })),
        disableEmailPassword || providers.length === 0 ? null : (React.createElement(material_1.Divider, null)),
        providers && providers.length > 0 ? (React.createElement(React.Fragment, null,
            React.createElement(material_1.Stack, { gap: 1, padding: 1 },
                providers.includes('apple') ? (React.createElement(SocialAuthButton_1.AppleButton, null)) : null,
                providers.includes('azure') ? (React.createElement(SocialAuthButton_1.AzureButton, null)) : null,
                providers.includes('bitbucket') ? (React.createElement(SocialAuthButton_1.BitbucketButton, null)) : null,
                providers.includes('discord') ? (React.createElement(SocialAuthButton_1.DiscordButton, null)) : null,
                providers.includes('facebook') ? (React.createElement(SocialAuthButton_1.FacebookButton, null)) : null,
                providers.includes('gitlab') ? (React.createElement(SocialAuthButton_1.GitlabButton, null)) : null,
                providers.includes('github') ? (React.createElement(SocialAuthButton_1.GithubButton, null)) : null,
                providers.includes('google') ? (React.createElement(SocialAuthButton_1.GoogleButton, null)) : null,
                providers.includes('keycloak') ? (React.createElement(SocialAuthButton_1.KeycloakButton, null)) : null,
                providers.includes('linkedin') ? (React.createElement(SocialAuthButton_1.LinkedInButton, null)) : null,
                providers.includes('notion') ? (React.createElement(SocialAuthButton_1.NotionButton, null)) : null,
                providers.includes('slack') ? (React.createElement(SocialAuthButton_1.SlackButton, null)) : null,
                providers.includes('spotify') ? (React.createElement(SocialAuthButton_1.SpotifyButton, null)) : null,
                providers.includes('twitch') ? (React.createElement(SocialAuthButton_1.TwitchButton, null)) : null,
                providers.includes('twitter') ? (React.createElement(SocialAuthButton_1.TwitterButton, null)) : null,
                providers.includes('workos') ? (React.createElement(SocialAuthButton_1.WorkosButton, null)) : null))) : null))));
};
exports.LoginPage = LoginPage;
