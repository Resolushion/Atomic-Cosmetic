"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ForgotPasswordPage = void 0;
var React = __importStar(require("react"));
var AuthLayout_1 = require("./AuthLayout");
var ForgotPasswordForm_1 = require("./ForgotPasswordForm");
/**
 * A component that renders a page for resetting the current user password through Supabase.
 * @param props
 * @param props.children The content of the page. If not set, it will render a ForgotPasswordForm.
 *
 * @example
 * import { ForgotPasswordPage } from 'ra-supabase-ui-materialui';
 * import { Admin, CustomRoutes } from 'react-admin';
 *
 * const App = () => (
 *    <Admin dataProvider={dataProvider}>
 *      <CustomRoutes>
 *       <Route path={ForgotPasswordPage.path} element={<ForgotPasswordPage />} />
 *     </CustomRoutes>
 *      ...
 *  </Admin>
 * );
 */
var ForgotPasswordPage = function (props) {
    var _a = props.children, children = _a === void 0 ? React.createElement(ForgotPasswordForm_1.ForgotPasswordForm, null) : _a;
    return React.createElement(AuthLayout_1.AuthLayout, null, children);
};
exports.ForgotPasswordPage = ForgotPasswordPage;
exports.ForgotPasswordPage.path = '/forgot-password';
